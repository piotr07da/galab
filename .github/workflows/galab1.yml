name: Galab Build Workflow
env:
  GALAB_VERSION: 1.0.2-alpha
run-name: ${{ github.actor }} is running GitHub Actions ðŸš€
on:
  push:
    branches:
      - 'master'
        
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      eventstore:
        image: eventstore/eventstore:21.10.9-bionic
        env:
          EVENTSTORE_CLUSTER_SIZE: 1
          EVENTSTORE_RUN_PROJECTIONS: All
          EVENTSTORE_START_STANDARD_PROJECTIONS: True
          EVENTSTORE_EXT_TCP_PORT: 1113
          EVENTSTORE_INSECURE: true
          EVENTSTORE_ENABLE_EXTERNAL_TCP: true
          EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP: true
        ports:
        - "1113:1113"
        - "2113:2113"
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Restore packages
      run: dotnet restore Galab
    - name: Build
      run: dotnet build Galab -c Release --no-restore
    - name: Test
      run: dotnet test -c Release --no-restore --verbosity normal --no-build --filter Category=EventStore
      working-directory: Galab/Galab.Tests

  test-cosmosdb:
    runs-on: ubuntu-latest
    services:
      cosmosdb:
        image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
        env:
          AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 5
          AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: false
          AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE: 127.0.0.1
        ports:
        - "8081:2223"
        - "10251:10251"
        - "10252:10252"
        - "10253:10253"
        - "10254:10254"
        - "10255:10255"
        options: >-
          --memory 3g
          --cpus 2.0
          --tty
          --platform linux
          --restart unless-stopped
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Restore packages
      run: dotnet restore Galab
    - name: Build
      run: dotnet build Galab -c Release --no-restore
    - name: Test
      run: dotnet test -c Release --no-restore --verbosity normal --no-build --filter Category=CosmosDb
      working-directory: Galab/Galab.Tests
  
  test-eventstore:
    runs-on: ubuntu-latest
    steps:
      - name: dotnet info
        run: dotnet --info
  
  calc-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    needs:
      - build
      - test-cosmosdb
      - test-eventstore
    outputs:
      version: ${{ steps.ver.outputs.version }}
    steps:
      - id: ver
        run: |
          if [ "${{ github.ref }}" = 'refs/heads/master' ]; then
            echo "version=${GALAB_VERSION}" >> $GITHUB_OUTPUT
          else
            echo "version=${GALAB_VERSION}-develop.${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi
  
  publish:
    name: Build and Publish NuGets
    runs-on: ubuntu-latest
    needs:
      - build
      - calc-version
    steps:
      - uses: actions/checkout@v3
      - name: Version Output Check
        run: |
          echo "${{ needs.calc-version.outputs.version }}"
      - name: pack
        run: dotnet pack Galab.csproj --version-suffix ${{ needs.calc-version.outputs.version }}
        working-directory: Galab/Galab