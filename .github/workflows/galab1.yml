name: Galab Build Workflow
env:
  GALAB_VERSION: 1.0.2-alpha
run-name: ${{ github.actor }} is running GitHub Actions 🚀
on:
  push:
    branches:
      - 'master'
        
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Restore packages
        run: dotnet restore Galab
      - name: Build
        run: dotnet build Galab -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-restore --verbosity normal --no-build
        working-directory: Galab/Galab.Tests

  test-cosmosdb:
    runs-on: ubuntu-latest
    steps:
      - name: dotnet info
        run: dotnet --info
  
  test-eventstore:
    runs-on: ubuntu-latest
    steps:
      - name: dotnet info
        run: dotnet --info
  
  calc-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    needs:
      - build
      - test-cosmosdb
      - test-eventstore
    outputs:
      version: ${{ steps.ver.outputs.version }}
    steps:
      - id: ver
        run: |
          if [ "${{ github.ref }}" = 'refs/heads/master' ]; then
            echo "version=${GALAB_VERSION}" >> $GITHUB_OUTPUT
          else
            echo "version=${GALAB_VERSION}-develop.${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi
  
  publish:
    name: Build and Publish NuGets
    runs-on: ubuntu-latest
    needs:
      - build
      - calc-version
    steps:
      - name: Version Output Check
        run: |
          echo "${{ needs.calc-version.outputs.version }}"
      - name: pack
        run: dotnet pack --no-build --no-restore --version-suffix ${{ needs.calc-version.outputs.version }}
        working-directory: Galab/Galab